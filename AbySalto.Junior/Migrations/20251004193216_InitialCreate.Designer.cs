// <auto-generated />
using System;
using AbySalto.Junior.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AbySalto.Junior.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251004193216_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AbySalto.Junior.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeliveryAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentMethodId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderStatusId");

                    b.HasIndex("PaymentMethodId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContactNumber = "+385 91 123 4567",
                            Currency = "EUR",
                            CustomerName = "Marko Marković",
                            DateCreated = new DateTime(2024, 10, 4, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            DeliveryAddress = "Ilica 10, Zagreb",
                            IsDeleted = false,
                            Note = "Molim bez luka",
                            OrderStatusId = 2,
                            OrderTime = new DateTime(2024, 10, 4, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethodId = 1,
                            TotalAmount = 25.50m
                        },
                        new
                        {
                            Id = 2,
                            ContactNumber = "+385 92 234 5678",
                            Currency = "EUR",
                            CustomerName = "Ana Anić",
                            DateCreated = new DateTime(2024, 10, 4, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            DeliveryAddress = "Maksimirska 15, Zagreb",
                            IsDeleted = false,
                            OrderStatusId = 1,
                            OrderTime = new DateTime(2024, 10, 4, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethodId = 2,
                            TotalAmount = 42.75m
                        });
                });

            modelBuilder.Entity("AbySalto.Junior.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2024, 10, 4, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ItemName = "Pizza Margherita",
                            OrderId = 1,
                            Price = 12.50m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2024, 10, 4, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ItemName = "Coca Cola",
                            OrderId = 1,
                            Price = 6.50m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(2024, 10, 4, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ItemName = "Burger Deluxe",
                            OrderId = 2,
                            Price = 18.00m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 4,
                            DateCreated = new DateTime(2024, 10, 4, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ItemName = "Pomfrit",
                            OrderId = 2,
                            Price = 8.00m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 5,
                            DateCreated = new DateTime(2024, 10, 4, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ItemName = "Sprite",
                            OrderId = 2,
                            Price = 3.75m,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("AbySalto.Junior.Models.OrderStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OrderStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "PENDING",
                            DateCreated = new DateTime(2024, 10, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Narudžba je zaprimljena",
                            IsDeleted = false,
                            Name = "Na čekanju"
                        },
                        new
                        {
                            Id = 2,
                            Code = "IN_PROGRESS",
                            DateCreated = new DateTime(2024, 10, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Narudžba se priprema",
                            IsDeleted = false,
                            Name = "U pripremi"
                        },
                        new
                        {
                            Id = 3,
                            Code = "COMPLETED",
                            DateCreated = new DateTime(2024, 10, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Narudžba je dovršena",
                            IsDeleted = false,
                            Name = "Završena"
                        });
                });

            modelBuilder.Entity("AbySalto.Junior.Models.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PaymentMethods");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "CASH",
                            DateCreated = new DateTime(2024, 10, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Plaćanje gotovinom",
                            IsDeleted = false,
                            Name = "Gotovina"
                        },
                        new
                        {
                            Id = 2,
                            Code = "CARD",
                            DateCreated = new DateTime(2024, 10, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Plaćanje karticom",
                            IsDeleted = false,
                            Name = "Kartica"
                        },
                        new
                        {
                            Id = 3,
                            Code = "ONLINE",
                            DateCreated = new DateTime(2024, 10, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Online plaćanje",
                            IsDeleted = false,
                            Name = "Online"
                        });
                });

            modelBuilder.Entity("AbySalto.Junior.Models.Order", b =>
                {
                    b.HasOne("AbySalto.Junior.Models.OrderStatus", "OrderStatus")
                        .WithMany("Orders")
                        .HasForeignKey("OrderStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AbySalto.Junior.Models.PaymentMethod", "PaymentMethod")
                        .WithMany("Orders")
                        .HasForeignKey("PaymentMethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderStatus");

                    b.Navigation("PaymentMethod");
                });

            modelBuilder.Entity("AbySalto.Junior.Models.OrderItem", b =>
                {
                    b.HasOne("AbySalto.Junior.Models.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("AbySalto.Junior.Models.Order", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("AbySalto.Junior.Models.OrderStatus", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("AbySalto.Junior.Models.PaymentMethod", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
